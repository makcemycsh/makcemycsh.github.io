{"version":3,"sources":["camera.js"],"names":["init","context","window","AudioContext","webkitAudioContext","$","each","Camera","this","brightness","contrast","volume","close","_classCallCheck","$selector","find","active","buffer","timer","selector","video","$controls","val","handlers","filter","css","clearInterval","removeClass","muted","resetStyles","_this","addClass","resetRange","openAnimation","initAudioContext","initChart","setInterval","chart","update","positionInfo","getBoundingClientRect","heightEl","height","widthEl","width","widthWindow","document","documentElement","clientWidth","hightWindow","clientHeight","moveLeft","left","moveTop","top","scale","-webkit-transform","-ms-transform","transform","z-index","_this2","node","createScriptProcessor","analyser","bands","source","connect","onaudioprocess","paused","Chart","type","data","labels","datasets","borderWidth","barStrokeWidth","backgroundColor","options","legend","display","scales","xAxes","ticks","gridLines","_this3","yAxes","min","_this4","keydown","e","key","open","changeContrast","bind","on","debounce","changeBrightness","changeVolume"],"mappings":"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","file":"camera.js","sourcesContent":["function init() {\n  let context = new (window.AudioContext || window.webkitAudioContext)();\n  $(\".js-camera\").each(function () {\n    new Camera($(this), context);\n  });\n}\n\nconst $controls = {\n  close: $(\".js-close\"),\n  brightness: $(\".js-camera-brightness\"),\n  contrast: $(\".js-camera-contrast\"),\n  volume: $(\".js-camera-volume\")\n};\n\nclass Camera {\n  constructor($selector, context) {\n    this.selector = $($selector);\n    this.video = $($selector).find('video');\n    this.active = false;\n    this.brightness = 100;\n    this.contrast = 100;\n    this.volume = 1;\n    this.buffer = 256;\n    this.timer = null;\n    this.chart = null;\n    this.context = context;\n\n    this.handlers();\n    this.initAudioContext();\n    this.initChart();\n  }\n\n  changeContrast() {\n    if (this.active) {\n      this.contrast = $($controls.contrast).val();\n      this.filter();\n    }\n  }\n\n  changeBrightness() {\n    if (this.active) {\n      this.brightness = $($controls.brightness).val();\n      this.filter();\n    }\n  }\n\n  changeVolume() {\n    if (this.active) {\n      this.volume = $($controls.volume).val();\n      this.video[0].volume = this.volume;\n    }\n  }\n\n  filter() {\n    this.selector.css(\"filter\", \"contrast(\" + this.contrast + \"%) brightness(\" + this.brightness + \"%)\");\n  }\n\n  close() {\n    clearInterval(this.timer);\n    $(\"body\").removeClass(\"mod-video\");\n    this.active = false;\n    this.video[0].muted = true;\n    this.resetStyles();\n  }\n\n  open() {\n    if (this.active) { return; }\n    this.active = true;\n    $(\"body\").addClass(\"mod-video\");\n    this.resetRange();\n    this.openAnimation();\n    this.video[0].muted = false;\n\n    this.initAudioContext();\n    this.initChart();\n    this.timer = setInterval(() => { this.chart.update();}, 100);\n\n  }\n\n  openAnimation() {\n    let positionInfo = this.selector[0].getBoundingClientRect();\n    let heightEl = positionInfo.height;\n    let widthEl = positionInfo.width;\n    let widthWindow = document.documentElement.clientWidth;\n    let hightWindow = document.documentElement.clientHeight;\n\n    let moveLeft = positionInfo.left - ((widthWindow - widthEl) / 2);\n    let moveTop = positionInfo.top - ((hightWindow - heightEl) / 2);\n    let scale = widthWindow / widthEl;\n\n    this.selector.css({\n      \"-webkit-transform\": \"translate(\" + -moveLeft + \"px, \" + -moveTop + \"px) scale(\" + scale + \")\",\n      \"-ms-transform\": \"translate(\" + -moveLeft + \"px, \" + -moveTop + \"px) scale(\" + scale + \")\",\n      \"transform\": \"translate(\" + -moveLeft + \"px, \" + -moveTop + \"px) scale(\" + scale + \")\",\n      \"z-index\": \"999\"\n    });\n\n\n  }\n\n  initAudioContext() {\n    this.node = this.context.createScriptProcessor(this.buffer, 1, 1);\n    this.analyser = this.context.createAnalyser();\n    this.analyser.fftSize = this.buffer;\n    this.bands = new Uint8Array(this.analyser.frequencyBinCount);\n    if (!this.source) this.source = this.context.createMediaElementSource(this.video[0]);\n    this.source.connect(this.analyser);\n    this.analyser.connect(this.node);\n    this.node.connect(this.context.destination);\n    this.source.connect(this.context.destination);\n    this.node.onaudioprocess = () => {\n      this.analyser.getByteFrequencyData(this.bands);\n      if (!this.video.paused) {\n        if (typeof this.update === \"function\") {\n          return this.update(this.bands);\n        } else {\n          return 0;\n        }\n      }\n    };\n  }\n\n  initChart() {\n    this.chart = new Chart($(\"#audio\"), {\n      type: 'bar',\n      data: {\n        labels: this.bands,\n        datasets: [{\n          data: this.bands,\n          borderWidth: 1,\n          barStrokeWidth: 2,\n          backgroundColor: \"yellow\"\n        }]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              display: false,\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              display: false,\n              max: 200,\n              min: 0\n            },\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }\n    });\n  }\n  \n  resetRange() {\n    $($controls.contrast).val(this.contrast);\n    $($controls.brightness).val(this.brightness);\n    $($controls.volume).val(this.volume);\n  }\n\n  resetStyles() {\n    this.selector.css({\n      \"-webkit-transform\": \"translate(0px, 0px) scale(1)\",\n      \"-ms-transform\": \"translate(0px, 0px) scale(1)\",\n      \"transform\": \"translate(0px, 0px) scale(1)\"\n    });\n    setTimeout(() => {\n      this.selector.css({\n        \"z-index\": \"1\"\n      })\n    }, 200)\n  }\n\n  handlers() {\n    $(document).keydown(e => {\n      if (e.key === \"Escape\") {\n        this.close();\n      }\n    });\n    this.selector.on(\"click\", this.open.bind(this));\n    $($controls.close).on(\"click\", this.close.bind(this));\n    $($controls.contrast).on(\"input\", debounce(this.changeContrast.bind(this), 5));\n    $($controls.brightness).on(\"input\", debounce(this.changeBrightness.bind(this), 5));\n    $($controls.volume).on(\"input\", debounce(this.changeVolume.bind(this), 5));\n  }\n}\n\ninit();"],"sourceRoot":"/source/"}