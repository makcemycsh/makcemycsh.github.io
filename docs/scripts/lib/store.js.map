{"version":3,"sources":["store.js"],"names":["Store","updateState","state","_classCallCheck","this","callbacks","action","forEach","callback","_this","push","filter","cb"],"mappings":"iYAAMA,iBACJ,SAAAA,EAAYC,EAAaC,GAAOC,gBAAAC,KAAAJ,GAC9BI,KAAKF,MAAQA,EACbE,KAAKH,YAAcA,EACnBG,KAAKC,UAAY,2DAHa,OAAAD,KAAAF,uCAcvBI,GACPF,KAAKF,MAAQE,KAAKH,YAAYG,KAAKF,MAAOI,GAC1CF,KAAKC,UAAUE,QAAQ,SAAAC,GAAA,OAVdA,wCAiBDA,GAAU,IAAAC,EAAAL,KAIlB,OAHAA,KAAKC,UAAUK,KAAKF,GAGb,WAAA,OAAMC,EAAKJ,UAbXC,EAAQD,UAAAM,OAAA,SAAAC,GAAA,OAAAA,IAAAJ","file":"store.js","sourcesContent":["class Store {\n  constructor(updateState, state) {\n    this.state = state;\n    this.updateState = updateState;\n    this.callbacks = [];\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Update state\n   * @param { Function } action\n   */\n  dispatch(action) {\n    this.state = this.updateState(this.state, action);\n    this.callbacks.forEach(callback => callback());\n  }\n\n  /**\n   * Subscription / unsubscribe to Store changes\n   * @param { Function } callback\n   */\n  subscribe(callback) {\n    this.callbacks.push(callback);\n\n    // Отписка!\n    return () => this.callbacks = this.callbacks.filter(cb => cb !== callback);\n  }\n\n}\n\n"],"sourceRoot":"/source/"}