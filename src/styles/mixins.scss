@mixin font-size($size: inherit, $spacing: auto, $height: normal) {
  font-size:      $size;
  letter-spacing: $spacing;
  line-height:    $height;
}

@mixin w-from($screen) {
  @media (min-width: $screen) {
    @content;
  }
}

@mixin w-to($screen) {
  @media (max-width: $screen - 1px) {
    @content;
  }
}

@mixin w-range($screen1,  $screen2) {
  @media (min-width: $screen1) and (max-width: $screen2 - 1px) {
    @content;
  }
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);
  $k: ($f-max - $f-min)/($w-max - $w-min);
  $b: $f-min - $k * $w-min;
  $b: $b + $units;
  @return calc(#{$k} * 100vw + #{$b});
}

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {
  font-size: $f-min;
  @media (min-width: $w-min) {
    @if ($fallback) {
      font-size: $fallback;
    }
    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
  }
  @media (min-width: $w-max) {
    font-size: $f-max;
  }
}

@mixin shadow($shadow-size,$shadow-blur,$shadow-color) {
  box-shadow: $shadow-size $shadow-size $shadow-blur $shadow-color, 0px 0px $shadow-size lighten($shadow-color, 5%);
}

@mixin track() {
  width:   $track-width;
  height:  $track-height;
  cursor:  pointer;
  animate: 0.2s;
}

@mixin thumb() {
  @include shadow($thumb-shadow-size, $thumb-shadow-blur, $thumb-shadow-color);
  border:        $thumb-border-width solid $thumb-border-color;
  height:        $thumb-height;
  width:         $thumb-width;
  border-radius: $thumb-radius;
  background:    $thumb-color;
  cursor:        pointer;
}

@mixin range() {
  input[type=range] {
    -webkit-appearance: none;
    padding:             $thumb-height/2 0;
    width:              $track-width;

    &:focus {
      outline: none;
    }

    &::-webkit-slider-runnable-track {
      @include track();
      @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
      background:    $track-color;
      border-radius: $track-radius;
      border:        $track-border-width solid $track-border-color;
    }

    &::-webkit-slider-thumb {
      @include thumb();
      -webkit-appearance: none;
      margin-top:         ((-$track-border-width * 2 + $track-height) / 2) - ($thumb-height / 2);
    }

    &:focus::-webkit-slider-runnable-track {
      background: lighten($track-color, $contrast);
    }

    &::-moz-range-track {
      @include track();
      @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
      background:    $track-color;
      border-radius: $track-radius;
      border:        $track-border-width solid $track-border-color;
    }
    &::-moz-range-thumb {
      @include thumb();
    }

    &::-ms-track {
      @include track();
      background:   transparent;
      border-color: transparent;
      border-width: $thumb-width 0;
      color:        transparent;
    }

    &::-ms-fill-lower {
      background:    darken($track-color, $contrast);
      border:        $track-border-width solid $track-border-color;
      border-radius: $track-radius*2;
      @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    }
    &::-ms-fill-upper {
      background:    $track-color;
      border:        $track-border-width solid $track-border-color;
      border-radius: $track-radius*2;
      @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    }
    &::-ms-thumb {
      @include thumb();
    }
    &:focus::-ms-fill-lower {
      background: $track-color;
    }
    &:focus::-ms-fill-upper {
      background: lighten($track-color, $contrast);
    }
  }
}