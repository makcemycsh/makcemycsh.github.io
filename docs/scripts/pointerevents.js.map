{"version":3,"sources":["pointerevents.js"],"names":["is_touch_device","window","$","document","body","addClass","Handler","selector","_classCallCheck","this","$img","$imgWrap","$zoom","$brightness","undefined","$scroll","top","height","newHeight","minHeight","maxHeight","brightness","oldTop","leftLim","topLim","rotate","events","newRotate","oldDistance","newDistamce","lastTap","oldRotate","hendlPointerEvents","left","distance","Math","sign","moveImg","change","html","changeBrightness","zoom","changeZoom","val","-webkit-filter","filter","toFixed","parent","width","x1","y1","x2","y2","css","pow","atan2","PI","persent","e","console","log","push","id","originalEvent","clientX","clientY","now","Date","getTime","oldLeft","getLim","length","start","end","zoomImg","checkLim","pointerId","fixed","curId","timesince","curObj","item","getDistance","moveScroll","getAngle","oldDistamce","abs","handlePinch","handelRotate","_this","on","pointerDown","pointerUp"],"mappings":"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","file":"pointerevents.js","sourcesContent":["function is_touch_device() {\n  return !!('ontouchstart' in window);\n}\n\n// Проверяем тип устройства\nif (is_touch_device()) $(document.body).addClass('is-touch');\nelse $(document.body).addClass('no-touch');\n\nclass Handler {\n  constructor(selector) {\n    this.selector = $(selector);\n    this.$imgWrap = $('.js-img-wrapper', this.selector);\n    this.$img = $('img', this.$imgWrap);\n    this.$scroll = $('.js-scroll', this.selector);\n    this.$zoom = $('.js-zoom', this.selector);\n    this.$brightness = $('.js-brightness', this.selector);\n\n    this.height = undefined;\n    this.newHeight = undefined;\n    this.minHeight = 300;\n    this.maxHeight = 1000;\n\n    this.left = 0;\n    this.top = 0;\n    this.oldLeft = 0;\n    this.oldTop = 0;\n    this.leftLim = 0;\n    this.topLim = 0;\n    this.brightness = 50;\n\n    this.events = [];\n\n    this.distance = 0;\n    this.oldDistance = undefined;\n    this.newDistamce = 0;\n\n    this.rotate = 0;\n    this.oldRotate = undefined;\n    this.newRotate = 0;\n\n    this.zoom = false;\n    this.fixed = false;\n    this.lastTap = undefined;\n    this.hendlPointerEvents(this.selector);\n    this.handelRotate(0);\n  }\n\n// Лимит для скролла изображения\n  checkLim() {\n    this.top >= this.topLim ? this.top = this.topLim : '';\n    this.top <= -this.topLim ? this.top = -this.topLim : '';\n\n    this.left >= this.leftLim ? this.left = this.leftLim : '';\n    this.left <= -this.leftLim ? this.left = -this.leftLim : '';\n  }\n\n  handlePinch() {\n    if (!this.newHeight) this.newHeight = this.$img.height();\n    this.distance = 10 * Math.sign(this.distance);\n    this.newHeight += this.distance;\n    if (this.newHeight >= this.maxHeight) this.newHeight = this.maxHeight;\n    if (this.newHeight <= this.minHeight) this.newHeight = this.minHeight;\n\n    this.$img.height(this.newHeight);\n    this.moveImg();\n  }\n\n  handelRotate(change) {\n    this.brightness += change;\n    if (this.brightness >= 100) this.brightness = 100;\n    if (this.brightness <= 0) this.brightness = 0;\n    this.$brightness.html(this.brightness);\n    this.changeBrightness(this.$img, this.brightness);\n  }\n\n  zoomImg() {\n    if (this.zoom) {\n      this.$img.height(this.height);\n      this.zoom = !this.zoom;\n    } else {\n      this.height = this.$img.height();\n      this.maxHeight = 2 * this.height;\n      this.$img.height(this.maxHeight);\n      this.zoom = !this.zoom;\n    }\n    this.moveImg();\n    this.changeZoom(this.$img, this.brightness);\n  }\n\n  // Меняем яркость от 50 до 150\n  changeBrightness(selector, val) {\n    selector.css({\n      \"-webkit-filter\": \"brightness(\" + (val + 50) + \"%)\",\n      \"filter\": \"brightness(\" + (val + 50) + \"%)\"\n    })\n  }\n\n  changeZoom() {\n    let zoom = (this.$img.height() * 0.1).toFixed(0);\n    $(this.$zoom).html(zoom);\n  }\n\n  getLim() {\n    this.topLim = (this.$imgWrap.height() - this.$imgWrap.parent().height()) / 2;\n    this.leftLim = (this.$imgWrap.width() - this.$imgWrap.parent().width()) / 2;\n  }\n\n  getDistance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\n  }\n\n  getAngle(x1, y1, x2, y2) {\n    return Math.atan2(y1 - y2, x1 - x2) * 180 / Math.PI;\n  }\n\n  moveScroll() {\n    let start = 15;\n    let end = 85;\n    let persent = (this.left + this.leftLim) * 100 / (this.leftLim * 2);\n    persent = persent * 0.7 + start;\n    persent > end ? persent = end : '';\n    persent < start ? persent = start : '';\n    this.$scroll.css('left', persent + '%');\n  }\n\n  pointerDown(e) {\n    console.log(e);\n    this.events.push({\n      id: e.originalEvent.pointerId,\n      clientX: e.clientX,\n      clientY: e.clientY\n    });\n    let now = new Date().getTime();\n    this.oldLeft = e.clientX;\n    this.oldTop = e.clientY;\n    this.oldDistance = undefined;\n    this.oldRotate = undefined;\n\n    this.getLim();\n\n    if (this.events.length === 2) this.fixed = true;\n    if (this.events.length === 1) {\n      let timesince = now - this.lastTap;\n      if ((timesince < 300) && (timesince > 0)) this.zoomImg();     // Двойной тап\n      this.lastTap = new Date().getTime();\n    }\n  }\n\n  moveImg() {\n    this.getLim();\n    this.checkLim();\n    this.$img.css('transform', 'translate(' + this.left + 'px, ' + this.top + 'px)');\n    this.moveScroll();\n  }\n\n  pointerMove(e) {\n    if (this.events.length === 1 && !this.fixed) {\n\n      this.left += e.clientX - this.oldLeft;\n      this.top += e.clientY - this.oldTop;\n      this.moveImg();\n      this.oldLeft = e.clientX;\n      this.oldTop = e.clientY;\n\n    } else if (this.events.length === 2) {\n      let curId = e.originalEvent.pointerId;\n      let curObj = this.events.filter(item => item.id === curId)[0];\n      curObj.clientX = e.clientX;\n      curObj.clientY = e.clientY;\n\n      let x1 = this.events[0].clientX;\n      let y1 = this.events[0].clientY;\n      let x2 = this.events[1].clientX;\n      let y2 = this.events[1].clientY;\n\n      this.newDistamce = this.getDistance(x1, y1, x2, y2);\n      this.newRotate = this.getAngle(x1, y1, x2, y2);\n\n\n      if (!this.oldRotate) this.oldRotate = this.newRotate;\n      if (!this.oldDistance) this.oldDistance = this.newDistamce;\n\n      this.rotate = this.newRotate - this.oldRotate;\n      this.oldRotate = this.newRotate;\n\n\n      this.distance = this.newDistamce - this.oldDistamce;\n      this.oldDistamce = this.newDistamce;\n\n      //Отделяем поворот от зума\n      Math.abs(this.distance) > 5 && this.handlePinch();\n      Math.abs(this.rotate) > 2 && this.handelRotate(Math.sign(this.rotate));\n\n    }\n    this.changeZoom();\n  }\n\n  pointerUp(e) {\n    this.events = this.events.filter((item) => item.id !== e.originalEvent.pointerId);\n    if (this.events.length === 0) this.fixed = false;\n  }\n\n  // Обработчики событий\n  hendlPointerEvents(selector) {\n    if (is_touch_device()) {\n      selector.on('pointermove', e => this.pointerMove(e));\n      selector.on('pointerdown', e => this.pointerDown(e));\n      selector.on('pointerup pointercancel pointerleave pointerout', e => this.pointerUp(e));\n\n    }\n  }\n}"],"sourceRoot":"/source/"}