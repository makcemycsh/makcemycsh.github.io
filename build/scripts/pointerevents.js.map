{"version":3,"sources":["pointerevents.js"],"names":["is_touch_device","window","$","document","body","addClass","Handler","selector","_classCallCheck","this","$img","$imgWrap","$zoom","$brightness","oldLeft","height","minHeight","maxHeight","brightness","top","oldTop","undefined","leftLim","oldRotate","events","newDistamce","lastTap","rotate","zoom","hendlPointerEvents","getLim","moveScroll","setBrightness","topLim","parent","width","left","distance","html","changeBrightness","val","css","-webkit-filter","filter","toFixed","e","length","clientX","clientY","checkLim","curId","originalEvent","pointerId","curObj","item","id","x1","y1","x2","y2","oldDistance","getAngle","getDistance","newRotate","oldDistamce","Math","abs","pow","atan2","PI","persent","$scroll","push","now","Date","getTime","curPosX","curPosY","timesince","zoomImg","_this","pointerMove","pointerDown","pointerUp"],"mappings":"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","file":"pointerevents.js","sourcesContent":["function is_touch_device() {\n  return !!('ontouchstart' in window);\n}\n\n// Проверяем тип устройства\nif (is_touch_device()) $(document.body).addClass('is-touch');\nelse $(document.body).addClass('no-touch');\n\nclass Handler {\n  constructor(selector) {\n    this.selector = $(selector);\n    this.$imgWrap = $('.js-img-wrapper', this.selector);\n    this.$img = $('img', this.$imgWrap);\n    this.$scroll = $('.js-scroll', this.selector);\n    this.$zoom = $('.js-zoom', this.selector);\n    this.$brightness = $('.js-brightness', this.selector);\n\n    this.height = this.$img.height();\n    this.minHeight = 300;\n    this.maxHeight = 1000;\n\n    this.left = 0;\n    this.top = 0;\n    this.oldLeft = 0;\n    this.oldTop = 0;\n    this.leftLim = 0;\n    this.topLim = 0;\n    this.brightness = 50;\n\n    this.events = [];\n    this.distance = 0;\n    this.oldDistance = undefined;\n    this.newDistamce = 0;\n\n    this.rotate = 0;\n    this.oldRotate = undefined;\n    this.newRotate = 0;\n\n\n    this.zoom = false;\n    this.lastTap = undefined;\n    this.hendlPointerEvents(this.selector);\n  }\n\n  zoomImg() {\n    if (this.zoom) {\n      this.$img.height(this.height);\n      this.zoom = !this.zoom;\n    } else {\n      this.height = this.$img.height();\n      this.maxHeight = 2 * this.height;\n      this.$img.height(this.maxHeight);\n      this.zoom = !this.zoom;\n    }\n    this.getLim();\n    this.moveScroll();\n    this.setBrightness();\n  }\n\n  getLim() {\n    this.topLim = (this.$imgWrap.height() - this.$imgWrap.parent().height()) / 2;\n    this.leftLim = (this.$imgWrap.width() - this.$imgWrap.parent().width()) / 2;\n  }\n\n  checkLim() {\n    this.top >= this.topLim ? this.top = this.topLim : '';\n    this.top <= -this.topLim ? this.top = -this.topLim : '';\n\n    this.left >= this.leftLim ? this.left = this.leftLim : '';\n    this.left <= -this.leftLim ? this.left = -this.leftLim : '';\n  }\n\n  handlePinch() {\n    // this.distance = this.newDistamce - this.oldDistance;\n    if (this.$img.height() + this.distance >= this.maxHeight) this.$img.height(this.maxHeight);\n    else if (this.$img.height() + this.distance <= this.minHeight) this.$img.height(this.minHeight);\n    else {this.$img.height(this.$img.height() + this.distance);}\n\n    // this.oldDistance = this.newDistamce;\n    this.getLim();\n    this.moveScroll();\n    // $('.js-debag').append('<div>' + this.$img.height() + '</div>');\n\n  }\n\n  handelRotate(change) {\n    this.brightness += change;\n    if (this.brightness >= 100) this.brightness = 100;\n    if (this.brightness <= 0) this.brightness = 0;\n    this.$brightness.html(this.brightness);\n    this.changeBrightness(this.$img, this.brightness);\n\n  }\n\n  // Меняем яркость от 50 до 150\n  changeBrightness(selector, val) {\n    selector.css({\n      \"-webkit-filter\": \"brightness(\" + (val + 50) + \"%)\",\n      \"filter\": \"brightness(\" + (val + 50) + \"%)\"\n    })\n  }\n\n  setBrightness() {\n    let zoom = (this.$img.height() * 0.1).toFixed(0);\n    $(this.$zoom).html(zoom);\n  }\n\n  pointerMove(e) {\n    if (this.events.length === 1) {\n\n      this.left += e.clientX - this.oldLeft;\n      this.top += e.clientY - this.oldTop;\n\n      this.checkLim();\n      this.$img.css('transform', 'translate(' + this.left + 'px, ' + this.top + 'px)');\n      this.moveScroll();\n\n      this.oldLeft = e.clientX;\n      this.oldTop = e.clientY;\n\n    } else if (this.events.length === 2) {\n      let curId = e.originalEvent.pointerId;\n      let curObj = this.events.filter(item => item.id === curId)[0];\n      curObj.clientX = e.clientX;\n      curObj.clientY = e.clientY;\n\n      let x1 = this.events[0].clientX;\n      let y1 = this.events[0].clientY;\n      let x2 = this.events[1].clientX;\n      let y2 = this.events[1].clientY;\n\n      if (!this.oldRotate) this.oldDistance = this.getAngle(x1, y1, x2, y2);\n      if (!this.oldDistance) this.oldDistance = this.getDistance(x1, y1, x2, y2);\n\n      this.newRotate = this.getAngle(x1, y1, x2, y2);\n      this.rotate = this.newRotate - this.oldRotate;\n      this.oldRotate = this.newRotate;\n      // this.brightness\n\n      this.newDistamce = this.getDistance(x1, y1, x2, y2);\n      this.distance = this.newDistamce - this.oldDistamce;\n      this.oldDistamce = this.newDistamce;\n\n      // $('.js-debag').append('<div>Rotate: ' + th/is.rotate + '</div>');\n      // $('.js-debag').append('<div>Distance: ' + this.distance + '</div>');\n\n      //Отделяем поворот от зума\n      Math.abs(this.distance) > 5 && this.handlePinch();\n      Math.abs(this.rotate) > 3 && this.handelRotate(Math.sign(this.rotate));\n\n    }\n    this.setBrightness();\n  }\n\n  getDistance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\n  }\n\n  getAngle(x1, y1, x2, y2) {\n    return Math.atan2(y1 - y2, x1 - x2) * 180 / Math.PI;\n  }\n\n  moveScroll() {\n    let start = 15;\n    let end = 85;\n    let persent = (this.left + this.leftLim) * 100 / (this.leftLim * 2);\n    persent = persent * 0.7 + start;\n    persent > end ? persent = end : '';\n    persent < start ? persent = start : '';\n    this.$scroll.css('left', persent + '%');\n  }\n\n  pointerDown(e) {\n    this.events.push({\n      id: e.originalEvent.pointerId,\n      clientX: e.clientX,\n      clientY: e.clientY\n    });\n    let now = new Date().getTime();\n    this.curPosX = e.clientX;\n    this.curPosY = e.clientY;\n    this.oldLeft = e.clientX;\n    this.oldTop = e.clientY;\n    this.oldDistance = undefined;\n    this.oldRotate = undefined;\n\n    this.getLim();\n    if (this.events.length === 1) {\n      let timesince = now - this.lastTap;\n      if ((timesince < 300) && (timesince > 0)) this.zoomImg();\n      this.lastTap = new Date().getTime();\n    }\n  }\n\n  pointerUp(e) {\n    this.events = this.events.filter((item) => item.id !== e.originalEvent.pointerId);\n  }\n\n  hendlPointerEvents(selector) {\n    if (is_touch_device()) {\n      selector.on('pointermove', e => this.pointerMove(e));\n      selector.on('pointerdown', e => this.pointerDown(e));\n      selector.on('pointerup pointercancel pointerleave pointerout', e => this.pointerUp(e));\n\n    }\n  }\n}"],"sourceRoot":"/source/"}